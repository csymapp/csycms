#!/usr/bin/env node

'use strict';

// Hide Keymetrics banner on first time PM2 is required
var consoleLog = console.log;
console.log    = function () {};
var pm2        = require('pm2');
console.log    = consoleLog;

// Modules
var path    = require('path');
var program = require('commander');
var pkg     = require('../package.json');
var Tail    = require('always-tail');

process.chdir(path.normalize(path.join(__dirname, '..')));

program
  .version(pkg.version);

program
  .command('start')
  .description('Start CSYCMS Service')
  .action(function () {
    pm2.connect(function () {
      pm2.start({
        script    : path.normalize(path.join(__dirname, '..', 'example', 'server.js')),
        exec_mode : 'fork',
        instances : 1,
        name      : 'CSYCMS'
      },
      function (error, apps) {
        if (error) {
          console.log('CSYCMS Failed to Start: ' + error.msg);
        } else {
          console.log('CSYCMS Service Started.');
        }
        pm2.disconnect();
      });

    });
  });

program
  .command('stop')
  .description('Stop CSYCMS Service')
  .action(function () {
    pm2.connect(function () {
      pm2.stop('CSYCMS', function (error, proc) {
        if (error) {
          console.log('CSYCMS could not be stopped: ' + error.msg);
          process.exit(1);
        }
        pm2.delete('CSYCMS', function (error, proc) {
          if (error) {
            console.log('CSYCMS could not be stopped: ' + error.msg);
            process.exit(1);
          } else {
            console.log('CSYCMS Stopped');
            process.exit(0);
          }
        });
      });
    });
  });

program
  .command('restart')
  .description('Restart CSYCMS Service')
  .action(function () {
    pm2.connect(function () {
      pm2.restart('CSYCMS', function (error, proc) {
        if (error) {
          console.log('CSYCMS could not be restarted: ' + error.msg);
          process.exit(1);
        } else {
          console.log('CSYCMS restarted');
          process.exit(0);
        }
      });
    });
  });

program
  .command('logs')
  .description('Show CSYCMS Logs')
  .action(function () {
    pm2.connect(function () {
      pm2.describe('CSYCMS', function (error, list) {
        if (error) {
          console.log('Error getting info: ' + error.msg);
          process.exit(1);
        } else if (list.length === 0) {
          console.log('CSYCMS not running');
          process.exit(0);
        } else {

          var log       = new Tail(list[0].pm2_env.pm_out_log_path, '\n', { interval : 500 });
          var error_log = new Tail(list[0].pm2_env.pm_err_log_path, '\n', { interval : 500 });

          log.on('line', function (data) {
            console.log(data);
          });

          error_log.on('line', function (data) {
            console.log(data);
          });

        }
      });
    });
  });

// Show the config file location in the help
function customHelp (text) {
  var textArray = text.split(/\r?\n/);
  textArray[3]  = '  Config: ' + path.normalize(path.join(__dirname, '..', 'example', 'config.default.js')) + '\n';
  return textArray.join('\n');
}

program.parse(process.argv);

if (!process.argv.slice(2).length) {
  program.outputHelp(customHelp);
}
